# Use the official Python image as base
FROM python:3.9-slim

# Set the working directory in the container
WORKDIR /app

# Copy the dependencies file to the working directory
COPY requirements.txt .

# Install dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code to the working directory
COPY . .

# Command to run the Flask application
CMD ["python", "app.py"]

EXPOSE 8000



name: StopECSTasks

# on:
#   repository_dispatch:
#     types: [stop-ecs-task]

on:
    push:
      branches: [ "main" ]

jobs:
  stop_task:
    runs-on: ubuntu-latest

    steps:
      
      - name: Retrieve ECS Cluster and Service Name
        id: get-names
        run: |
            cluster_name=$(aws ecs list-clusters --query "clusterArns[*]" --output text | awk -F/ '{print $NF}')
            service_name=$(aws ecs list-services --cluster testCluster --query "serviceArns[*]" --output text | rev | cut -d'/' -f1 | rev)
            echo "::set-output name=cluster::$cluster_name"
            echo "::set-output name=service::$service_name"

      - name: Stop ECS Tasks
        run: |
            aws ecs update-service --cluster ${{ steps.get-names.outputs.cluster }} --service ${{ steps.get-names.outputs.service }} --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-west-2
          

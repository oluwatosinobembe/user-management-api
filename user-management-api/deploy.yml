name: Restart ECS Task

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: eu-west-2              # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: new-repo           # set this to your Amazon ECR repository name
  ECS_SERVICE: new-service                 # set this to your Amazon ECS service name
  ECS_CLUSTER: new-cluster                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/taskdefinition.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: new-container           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1


    - name: Build, tag, and push docker image to Amazon ECR Public
      id: build-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REGISTRY_ALIAS: h3a0m9l8
        REPOSITORY: new-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 440094375133.dkr.ecr.us-east-2.amazonaws.com
        docker build -t new-repo .
        docker tag new-repo:latest 440094375133.dkr.ecr.us-east-2.amazonaws.com/new-repo:latest
        docker push 440094375133.dkr.ecr.us-east-2.amazonaws.com/new-repo:latest

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: docker.io/library/new-repo

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
